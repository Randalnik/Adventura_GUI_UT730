/* Soubor je ulozen v kodovani UTF-8.
 * Kontrola kódování: Příliš žluťoučký kůň úpěl ďábelské ódy. */
package logika;

/*******************************************************************************
 * Instance třídy PrikazSeber představují ...
 *
 * @author    Jakub Skála (skaj06)
 * @version   ZS 2016/2017
 */
public class PrikazCti implements IPrikaz
{
    //== Datové atributy (statické i instancí)======================================
    private static final String NAZEV = "cti";
    private HerniPlan plan;
    private Batoh batoh;
    //== Konstruktory a tovární metody =============================================

    /***************************************************************************
     *  Konstruktor ....
     */
    public PrikazCti(HerniPlan plan, Batoh batoh)
    {
        this.plan = plan;
        this.batoh = batoh; 
    }

    //== Nesoukromé metody (instancí i třídy) ======================================

    /**
     *  Provádí příkaz "cti". 
     *  
     *  DOPSAT!!!
     */ 

    public String proved(String... parametry){
        String vracenyText = null;        
        Prostor aktualni = plan.getAktualniProstor();  

        String nazevVeciKPrecteni = null;
        Vec vecKPrecteni = null;

        if (parametry.length == 0){        
            vracenyText =  "Co mám přečíst?";
        }

        if (parametry.length == 1) {     
            nazevVeciKPrecteni = parametry[0];            
            if (batoh.ziskejVec(nazevVeciKPrecteni) != null) { 
                vecKPrecteni = batoh.ziskejVec(nazevVeciKPrecteni);
                if (vecKPrecteni instanceof Vec) {
                    switch (nazevVeciKPrecteni) {
                        case "Deník":
                            vracenyText =  "\nPíše se den, už nevím který, kdy jsem zde ztroskotal.\nPro případ, že by to někoho taky potkalo jsem sepsal manuál, jak se odsud dostat helikoptérou.\nNajdete ho pod balvanem u vodopádu. Ať vám slouží, mě nepomohl.";
                            break; 
                        
                        case "Manuál":
                            vracenyText =  "\nMANUÁL PRO ŘÍZENÍ VRTULNÍKU\nNejdříve musíte doplnit palivo do stroje.\nPak budete potřebovat chybějící část rotoru, kterou se mi bohužel nepodařilo najít.\nVrtulník ovládáte kniplem uprostřed.\nNezapomeňte použít Start před odletem.\n\nTeď máte vše potřebné pro odlet z ostrova.\nHodně štěstí.\n";
                            vecKPrecteni.setJePouzitelna(true);
                        break; 
                        
                        case "Dopis":
                            vracenyText = "\nZde sem zhynul bídně!\n";
                        break;
                    }
                } else {
                    vracenyText =  "Můžeš použít pouze věc!";
                }
            } else {
                vracenyText =  "Tuto věc nemáš v batohu!";
            }

        }

        if (parametry.length > 1) { 
            vracenyText =  "Nemusíš zadávat tolik parametrů.";
        }                                                                         
        return vracenyText;
    }

    /**
     *  Metoda vrací název příkazu (slovo které používá hráč pro jeho vyvolání)
     *  
     *  @return nazev prikazu
     */
    public String getNazev(){
        return NAZEV;
    }
    //== Soukromé metody (instancí i třídy) ========================================

}
